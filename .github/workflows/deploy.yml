name: Spring Boot CI/CD with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout Source Code
        uses: actions/checkout@v4 # ✅ v3 -> v4로 수정

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4 # ✅ v3 -> v4로 수정
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. application-prod.properties 파일 생성
      - name: Make application-prod.properties
        run: |
          mkdir -p ./hanium_project/src/main/resources
          echo "${{ secrets.APPLICATION_PROD }}" > ./hanium_project/src/main/resources/application-prod.properties

      # 4. Gradle 빌드
      - name: Build with Gradle
        run: |
          cd ./hanium_project
          chmod +x ./gradlew
          ./gradlew build -x test

      # 5. 빌드된 JAR 파일을 아티팩트로 업로드
      - name: Upload JAR
        uses: actions/upload-artifact@v4 # ✅ v3 -> v4로 수정
        with:
          name: hanium-project-jar
          path: ./hanium_project/build/libs/hanium_project-0.0.1-SNAPSHOT.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # 1. 빌드 아티팩트 다운로드
      - name: Download JAR
        uses: actions/download-artifact@v4 # ✅ v3 -> v4로 수정
        with:
          name: hanium-project-jar

      # 2. EC2에 JAR 파일 전송
      - name: Transfer JAR to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_PEM_KEY }}
          source: "hanium_project-0.0.1-SNAPSHOT.jar"
          target: "/home/ubuntu/hanium_iot"

      # 3. EC2에서 배포 스크립트 실행
      - name: Execute Deploy Script on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_PEM_KEY }}
          script: |
            JAR_NAME="hanium_project-0.0.1-SNAPSHOT.jar"
            JAR_PATH="/home/ubuntu/hanium_iot/$JAR_NAME"
            
            PID=$(pgrep -f $JAR_NAME)
            if [ -n "$PID" ]; then
              kill -15 $PID
              sleep 5
            fi
            
            nohup java -Xms256m -Xmx512m -jar -Dspring.profiles.active=prod $JAR_PATH > /dev/null 2>&1 &