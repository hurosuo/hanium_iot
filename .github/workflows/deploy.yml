name: Spring Boot CI/CD with Gradle

# ⚠️ 이 부분이 잘못되었을 가능성이 높습니다.
on:
  push:
    branches: [ "main" ] # 'main' 브랜치에 푸시(push)될 때 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout Source Code
        uses: actions/checkout@v3

      # 2. JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. application-prod.properties 파일 생성
      - name: Make application-prod.properties
        run: |
          mkdir -p ./hanium_project/src/main/resources
          echo "${{ secrets.APPLICATION_PROD }}" > ./hanium_project/src/main/resources/application-prod.properties

      # 4. Gradle 빌드 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./hanium_project/gradlew

      # 5. Gradle 빌드
      - name: Build with Gradle
        run: ./hanium_project/gradlew -p ./hanium_project build -x test

      # 6. EC2에 접속해서 배포
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.AWS_EC2_PEM_KEY }}
          script: |
            cd ~/hanium_iot/hanium_project
            
            # 백그라운드에서 실행 중인 기존 서버 프로세스를 찾아 종료
            PID=$(pgrep -f hanium_project-0.0.1-SNAPSHOT.jar)
            if [ -n "$PID" ]; then
              kill -9 $PID
              sleep 5
            fi
            
            # 새로 빌드된 jar 파일을 백그라운드에서 실행
            nohup java -jar -Dspring.profiles.active=prod ./build/libs/hanium_project-0.0.1-SNAPSHOT.jar &