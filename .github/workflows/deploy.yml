name: Spring Boot CI/CD with Git Pull

# 'main' 브랜치에 푸시될 때 워크플로우 실행
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. EC2에 원격으로 접속하여 배포 스크립트를 실행
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ubuntu # 👈 EC2 OS가 Amazon Linux면 'ec2-user'로 변경
          key: ${{ secrets.AWS_EC2_PEM_KEY }}
          script: |
            # 1. hanium_iot 프로젝트 폴더로 이동 (없으면 GitHub에서 클론)
            if [ ! -d "/home/ubuntu/hanium_iot" ]; then
              git clone https://github.com/hurosuo/hanium_iot.git
            fi
            cd /home/ubuntu/hanium_iot
            git pull
            
            # 2. hanium_project 백엔드 폴더로 이동
            cd ./hanium_project
            
            # 3. 기존에 실행 중인 서버 프로세스 종료
            PID=$(pgrep -f hanium_project-0.0.1-SNAPSHOT.jar)
            if [ -n "$PID" ]; then
              echo "Stopping server with PID: $PID"
              kill -9 $PID
              sleep 5
            fi
            
            # 4. Gradle 실행 권한 부여
            chmod +x ./gradlew
            
            # 5. 프로젝트 빌드 (테스트는 건너뛰기)
            ./gradlew build -x test
            
            # 6. 새로 빌드된 .jar 파일을 백그라운드에서 실행
            echo "Starting new server..."
            nohup java -Xms256m -Xmx512m -jar -Dspring.profiles.active=prod ./build/libs/hanium_project-0.0.1-SNAPSHOT.jar &